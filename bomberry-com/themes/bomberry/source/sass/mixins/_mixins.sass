// @Author: bomberry
// @Date:   2018-05-29T22:07:12-07:00
// @Filename: _mixins.sass
// @Last modified by:   bomberry
// @Last modified time: 2018-06-01T18:02:28-07:00

// NOTE: The mixin file provides easy to use components used in making styles and style generators.

@mixin round-corners($radius: 4px)
  -webkit-border-radius: $radius
  -moz-border-radius: $radius
  -ms-border-radius: $radius
  -o-border-radius: $radius
  border-radius: $radius


// @mixin generateObjectStyle {$class-name, $variable-name, $color-name)
  .#{$class-name}.#{$variable-name}
    #{$variable-name}: #{$color-name}

// @mixin setColorStyle


  &-www
    background-color: $color-gray-light
  &-resume
    background-color: $color-resume
  &-portfolio
    background-color: $color-portfolio
  &-kitchen
    background-color: $color-kitchen
  &-1
    background-color: $color-1
  &-projects
    background-color: $color-projects
  &-contact
    background-color: $color-contact
  &-adobe
    background-color: $color-adobe
  &-site
    background-color: $color-gray

  &.location
    color: $color-gray-light
    &-resume
      color: $color-resume
    &-portfolio
      color: $color-portfolio
    &-kitchen
      color: $color-kitchen
    &-1
      color: $color-1
    &-projects
      color: $color-projects
    &-contact
      color: $color-contact
    &-adobe
      color: $color-adobe
  &.site
    padding-left: 0
    color: $color-gray



@mixin setColor($location-color)
  @if $location-color == site
    color: $color-black
  @else if $location-color == resume
    color: $color-red
  @else if $location-color == portfolio
    color: $color-orange
  @else if $location-color == kitchen
    color: $color-yellow
  @else if $location-color == 1
    color: $color-green
  @else if $location-color == projects
    color: $color-blue
  @else if $location-color == contact
    color: $color-purple
  @else if $location-color == adobe
    color: rgba(14,132,207,1.00)
  @else if $location-color == apple
    color: rgba(14,132,207,1.00)
  @else
    color: $color-gray-light

@mixin setColors
  @each $name, $value in $color-map
    &-#{$name}
      color: $value

@mixin setBgColor($location-color)
  @if $location-color == site
    background-color: $color-black
  @else if $location-color == resume
    background-color: $color-red
  @else if $location-color == portfolio
    background-color: $color-orange
  @else if $location-color == kitchen
    background-color: $color-yellow
  @else if $location-color == 1
    background-color: $color-green
  @else if $location-color == projects
    background-color: $color-blue
  @else if $location-color == contact
    background-color: $color-purple
  @else if $location-color == adobe
    background-color: rgba(14,132,207,1.00)
  @else if $location-color == apple
    background-color: rgba(14,132,207,1.00)
  @else
    background-color: $color-gray-light

@mixin setNavBorder($location-color)
  @if $location-color == site
    border-bottom-color: $color-black
  @else if $location-color == resume
    border-bottom-color: $color-red
  @else if $location-color == portfolio
    border-bottom-color: $color-orange
  @else if $location-color == kitchen
    border-bottom-color: $color-yellow
  @else if $location-color == 1
    border-bottom-color: $color-green
  @else if $location-color == projects
    border-bottom-color: $color-blue
  @else if $location-color == contact
    border-bottom-color: $color-purple
  @else if $location-color == adobe
    border-bottom-color: rgba(14,132,207,1.00)
  @else if $location-color == apple
    border-bottom-color: rgba(14,132,207,1.00)
  @else
    border-bottom-color: $color-gray-light

@mixin setDataAndColors
  @each $map-name, $map-color in $syrupNameColorMap
    &[data-item-name="#{$map-name}"]
      color: #{$map-color}
